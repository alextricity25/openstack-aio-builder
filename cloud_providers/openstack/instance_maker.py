from ..instance_maker import BaseInstanceMaker
from get_client import get_client

class InstanceMaker(BaseInstanceMaker):

    def __init__(self, name, cloud_init_config, auth_info, vm_image=None, **instance_info):

        self.name = name
        self.cloud_init_config = cloud_init_config
        if vm_image:
            self.image = vm_image
            # Image might be specified twice. Once in the config file,
            # again on the command line. We pop the image in instance_info
            # because only one image attribute can be specified in nova's
            # create method signature.
            instance_info.pop('image')
        else:
            self.image = instance_info.pop('image')

        self.flavor = instance_info.pop('flavor')
        self.client = get_client(auth_info)

        # User data is dynamically generated by the deployment tool's plugin
        instance_info['userdata'] = cloud_init_config

        # config_drive needs to be true, but I don't want to make people
        # specify that in the config file
        instance_info['config_drive'] = True

        self.instance_info = instance_info

    def create_instance(self):
        print "Creating instance: {}".format(self.name)
        print "It should be ready soon-ish. Go grab a coffee, watch a TV show, browse the internet."
        print "Go do whatever you do to entertain yourself for about an hour or so."
        nova = self.client
        create = nova.servers.create(self.name,self.image, self.flavor, **self.instance_info)
